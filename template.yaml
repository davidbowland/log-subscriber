AWSTemplateFormatVersion: 2010-09-09
Description: >-
  Subscriber for error logs

Transform:
  - AWS::Serverless-2016-10-31

Parameters:
  Environment:
    Type: String
    Default: prod
    AllowedValues:
      - prod
      - test
    Description: Environment for deploy
  PhoneNumber:
    Type: String
    Description: Phone number to receive error messages
  SmsApiKey:
    Type: String
    Description: API key for sms-queue-api

Mappings:
  EnvironmentMap:
    prod:
      project: log-subscriber
      smsApiUrl: https://sms-queue-api.dbowland.com/v1
    test:
      project: log-subscriber-test
      smsApiUrl: https://sms-queue-api.bowland.link/v1

Resources:
  # Lambda

  LogGroupSubscriber:
    Type: AWS::Serverless::Function
    Properties:
      Description: Processes error messages from log groups
      Architectures:
        - x86_64
      Handler: src/handlers/log-group-processor.logGroupProcessorHandler
      Environment:
        Variables:
          SMS_API_KEY: !Ref SmsApiKey
          SMS_API_URL: !FindInMap [EnvironmentMap, !Ref Environment, smsApiUrl]
          SMS_TO_PHONE_NUMBER: !Ref PhoneNumber
      FunctionName: !FindInMap [EnvironmentMap, !Ref Environment, project]
      MemorySize: 128
      Policies:
        # Give Lambda basic execution Permission
        - AWSLambdaBasicExecutionRole
      Runtime: nodejs22.x
      Tags:
        'created-by': 'log-subscriber'
        'created-for': 'dbowland'
        'environment': !Ref Environment
      Timeout: 60
      Tracing: Active
    Metadata:
      BuildMethod: esbuild
      BuildProperties:
        Minify: true
        Target: 'es2020'
        Sourcemap: true
        EntryPoints:
          - src/handlers/log-group-processor.ts

  CloudWatchLambdaInvokePermission:
    Type: AWS::Lambda::Permission
    Properties:
      Action: 'lambda:InvokeFunction'
      FunctionName: !Sub '${LogGroupSubscriber.Arn}'
      Principal: !Sub 'logs.${AWS::Region}.amazonaws.com'
      SourceAccount: !Ref AWS::AccountId
      SourceArn: !Sub 'arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:*:*'

  # CloudWatch

  LogGroupLambdaLogGroup:
    Type: AWS::Logs::LogGroup
    DependsOn: [LogGroupSubscriber]
    Properties:
      LogGroupName: !Sub /aws/lambda/${LogGroupSubscriber}
      RetentionInDays: 30
      Tags:
        - Key: 'created-by'
          Value: 'log-subscriber'
        - Key: 'created-for'
          Value: 'dbowland'
        - Key: 'environment'
          Value: !Ref Environment
